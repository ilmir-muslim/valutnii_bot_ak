#!/bin/bash

# –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ‚Äî –æ—Å—Ç–∞—ë—Ç—Å—è –≤ app/
patches_dir="patches"
mkdir -p "$patches_dir"  # —Å–æ–∑–¥–∞—Ç—å, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π –Ω–æ–º–µ—Ä –ø–∞—Ç—á–∞
next_patch_number=$(ls "$patches_dir" | grep -Eo 'patch_[0-9]+' | sed 's/[^0-9]*//g' | sort -n | tail -1)
if [[ -z "$next_patch_number" ]]; then
  next_patch_number=1
else
  next_patch_number=$((next_patch_number + 1))
fi

# –ò–º—è –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
patch_file=$(printf "%s/patch_%03d.txt" "$patches_dir" "$next_patch_number")
> "$patch_file"  # –æ—á–∏—Å—Ç–∫–∞/—Å–æ–∑–¥–∞–Ω–∏–µ

# –ò—Å–∫–ª—é—á–∞–µ–º—ã–µ –ø—É—Ç–∏
EXCLUDED_PATTERNS=(
  "/__pycache__/"
  "/.pytest_cache/"
  "./save_all_files.sh"
  "./bot.log"
  "./bs4_result.html"
  "./output.txt"
  "./patches/"
)

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
is_excluded() {
  local path="$1"
  for pattern in "${EXCLUDED_PATTERNS[@]}"; do
    if [[ "$path" == *"$pattern"* ]]; then
      return 0
    fi
  done
  return 1
}

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ñ–∞–π–ª—ã
find . -type f | while read -r file; do
  if ! is_excluded "$file"; then
    echo "===== $file =====" >> "$patch_file"
    cat "$file" >> "$patch_file"
    echo -e "\n" >> "$patch_file"
  fi
done

# –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ä–µ–≤–æ –ø—Ä–æ–µ–∫—Ç–∞
echo "===== –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ (tree –∏–∑ ../) =====" >> "$patch_file"
tree ../ -I "venv|__pycache__|project_structure.txt|node_modules" >> "$patch_file"

# –ö–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä
xclip -selection clipboard < "$patch_file"
echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞—Ç—á–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä"

echo "‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫ '$patch_file'"
